<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="756" started-at="2020-04-16T15:25:53 IST" finished-at="2020-04-16T15:25:54 IST">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:webApplication.testingFramework.runner.runTest@46238e3f]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="756" started-at="2020-04-16T15:25:53 IST" finished-at="2020-04-16T15:25:54 IST">
      <class name="webApplication.testingFramework.runner.runTest">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:webApplication.testingFramework.runner.runTest@46238e3f]" name="setUpClass" is-config="true" duration-ms="419" started-at="2020-04-16T15:25:53 IST" finished-at="2020-04-16T15:25:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="SKIP" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:webApplication.testingFramework.runner.runTest@46238e3f]" name="runScenario" duration-ms="143" started-at="2020-04-16T15:25:53 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-04-16T15:25:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["To validate Login functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["To test sample Testing Framework"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step "application is launched" is undefined. You can implement it using the snippet(s) below:

@Given("application is launched")
public void application_is_launched() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step "application is launched" is undefined. You can implement it using the snippet(s) below:

@Given("application is launched")
public void application_is_launched() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:112)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:125)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:29)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:webApplication.testingFramework.runner.runTest@46238e3f]" name="tearDownClass" is-config="true" duration-ms="111" started-at="2020-04-16T15:25:53 IST" finished-at="2020-04-16T15:25:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- webApplication.testingFramework.runner.runTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
